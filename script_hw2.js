// // ДЗ 2
// /* 1. Дан код:
// var a = 1, b = 1, c, d;
// c = ++a; alert(c);           // 2
// d = b++; alert(d);           // 1
// c = (2+ ++a); alert(c);      // 5
// d = (2+ b++); alert(d);      // 4
// alert(a);                    // 3
// alert(b);                    // 3
// Почему код даёт именно такие результаты? */

// var a = 1, b = 1, c, d;
// c = ++a; alert(c); 
// d = b++; alert(d);
// /*  В указанных выше 2х выражениях присутствует унарный оператор. 
// Добавляет единицу к своему операнду. 
// Если используется в качестве префикса (++x), то возвращает значение операнда 
// с добавленной к нему единицей; а в случае применения в качестве окончания (x++) 
// возвращает значение операнда перед добавлением к нему единицы, 
// что и видим в нашем примере: строка 13 возвращает с = 2 (увеличенное на единицу
// 'a', строка 14 возвращает '1', это 'b' до увеличения). */

// c = (2+ ++a); alert(c);
// /* выводит 5, т.к. к 2 прибавляем дважды увеличенную на единицу 'а'
// (первый раз увеличили в выражении выше, второй - в этом) */

// d = (2+ b++); alert(d);
// /* выводит 4, т.к. тут действует вышеуказанное, но прибавляем 'b' до увеличения */

// alert(a); // дважды увеличили на единицу
// alert(b); // дважды увеличили на единицу

// // 2. Чему будет равен x в примере ниже?

// var a = 2;
// var x = 1 + (a *= 2);
// // x = 5, (a *= 2) операция присваивания с умножением на 2

/* 3. Объявить две целочисленные переменные a и b и задать им
// произвольные начальные значения. Затем написать скрипт, который работает
// по следующему принципу:
// если a и b положительные, вывести их разность;
// если а и b отрицательные, вывести их произведение;
// если а и b разных знаков, вывести их сумму;
// ноль можно считать положительным числом. */

// var a = 0;
// var b = -4;
// if(a >= 0 && b >= 0)
//    alert(a - b);
// else if(a < 0 && b < 0)
//    alert(a * b);
// else
//    alert(a + b);

// /* 4. Присвоить переменной а значение в промежутке [0..15]. 
// С помощью оператора switch организовать вывод чисел от a до 15. 
// Применил бы в этом случае лучше рекурсию, но в условии написано
// с помощью switch, вижу это только так */

// number = Math.floor(Math.random() * 15);
// // alert(number)
// switch(number){
//    case 0:
//    alert('0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//    break;
// case 1:
//    alert('1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//    break;
// case 2:
//    alert('2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//    break;
// case 3:
//    alert('3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//    break;
// case 4:
//    alert('4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//    break;
// case 5:
//    alert('5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//    break;
// case 6:
//    alert('6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//    break;
// case 7:
//    alert('7, 8, 9, 10, 11, 12, 13, 14, 15');
//    break;
// case 8:
//    alert('8, 9, 10, 11, 12, 13, 14, 15');
//    break;
// case 9:
//    alert('9, 10, 11, 12, 13, 14, 15');
//    break;
// case 10:
//    alert('10, 11, 12, 13, 14, 15');
//    break;
// case 11:
//    alert('11, 12, 13, 14, 15');
//    break;
// case 12:
//    alert('12, 13, 14, 15');
//    break;
// case 13:
//    alert('13, 14, 15');
//    break;
// case 14:
//    alert('14, 15');
//    break;
// case 15:
//    alert('15');         
// }

/* 5. Реализовать основные 4 арифметические операции в виде функций
с двумя параметрами. Обязательно использовать оператор return. */

// function sum(x, y) {
//    return (x + y)
// }

// function difference(x, y) {
//    return (x - y)
// }

// function multiplication(x, y) {
//    return (x * y)
// }

// function division(x, y) {
//    return (x / y);
// }

/* 6. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием операции.
В зависимости от переданного значения операции выполнить одну из арифметических операций
(использовать функции из пункта 5) и вернуть полученное значение (использовать switch).
код работает только с раскоменчиной 5 задачей */

// function mathOperation(arg1, arg2, operation) {
//    switch(operation){
//       case sum:
//          alert(sum(arg1, arg2));
//          break;
//       case difference:
//          alert(difference(arg1, arg2));
//          break;
//       case multiplication:
//          alert(multiplication(arg1, arg2));
//          break;
//    case division:
//          alert(division(arg1, arg2));
//          break;        
//    }
// }

// mathOperation(12, 2, division);